{"version":3,"file":"static/js/30.d65b0211.chunk.js","mappings":"yOAyFA,UAjFiB,YACfA,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiB,WACnB,GAAG,IAEH,IAAMC,GAAeC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,KAAKC,QAAQ,IAEzDC,EAAa,SAACC,IAClBC,EAAAA,EAAAA,GAAWD,GAAIE,MAAK,SAACC,IACJ,IAAXA,IACFV,EAAAA,EAAAA,IAAiB,WAErB,GACF,EAEMW,EAAmB,SAACJ,EAAIK,IAC5BC,EAAAA,EAAAA,GAAWN,EAAIK,GAAQH,MAAK,SAACC,IACZ,IAAXA,IACFV,EAAAA,EAAAA,IAAiB,WAErB,GACF,EAEA,OACE,SAAC,EAAAc,SAAQ,WACP,UAAC,IAAS,CAACC,OAAO,EAAMC,UAAU,eAAc,WAC9C,iBAAKA,UAAU,cAAa,WAC1B,gBAAKA,UAAU,gCAA+B,UAC5C,wBAAI,qBAEN,gBAAKA,UAAU,0CAAyC,UACtD,iBAAKA,UAAU,MAAK,WAClB,gBAAKA,UAAU,QAAO,UACpB,kBAAOA,UAAU,0BAEnB,gBAAKA,UAAU,QAAO,UACpB,mBAAQA,UAAU,wBAAuB,SAAC,sBAKlD,gBAAKA,UAAU,cAAa,SACzBf,EAAagB,KAAI,SAACC,EAAMC,GAAC,OACxB,gBAEEH,UAAU,yCAAwC,UAElD,gBAAKA,UAAU,aAAY,UACzB,iBAAKA,UAAU,YAAW,WACxB,eAAIA,UAAU,oBAAmB,SAAEE,EAAKE,SACxC,cAAGJ,UAAU,oBAAmB,SAAEE,EAAKG,eACvC,eAAGL,UAAU,4BAA2B,WACtC,SAAC,MAAiB,IAAG,IAAEE,EAAKI,aAC5B,cACEC,QAASZ,EAAiBa,KACxB,EACAN,EAAKO,IACLP,EAAKN,QAEPI,UAAU,6BAA4B,UAEtC,SAAC,MAAa,OAEhB,cACEO,QAASjB,EAAWkB,KAAK,EAAMN,EAAKO,KACpCT,UAAU,4BAA2B,UAErC,SAAC,MAAe,OAElB,cAAGA,UAAU,4BAA2B,SAAEE,EAAKN,kBAzBhDO,EAAEO,WA6BH,UAMlB,C,wFCpFO,SAASlB,EAAWD,GACvB,OAAQoB,IAAAA,KAAU,CACdP,MAAO,gBACPQ,KAAM,oCACNC,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBACpBxB,MAAK,SAACC,GACL,GAAIA,EAAOwB,YACT,OAAQC,EAAAA,EAAAA,IAAc5B,GAAIE,MAAK,SAAC2B,GAC1B,OAAOA,CACX,GAER,GAEJ,C,wFCjBO,SAASvB,EAAWN,EAAGK,GAC1B,OAAOe,IAAAA,KAAU,CACbP,MAAO,gBACPiB,MAAO,SACPC,aAAc,CAACC,IAAK,MAAOC,UAAW,YAAaC,SAAU,WAAYpC,SAAU,YACnFqC,WAAW9B,IACZH,MAAK,SAACC,GACL,OAAOiC,EAAAA,EAAAA,IAAoBpC,EAAIG,EAAOkC,OAAOnC,MAAK,SAACoC,GAC/C,OAAOA,CACX,GACJ,GACJ,C","sources":["components/Cenceled/Cenceled.jsx","helper/DeleteAlert.js","helper/UpdateAlert.js"],"sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { AiOutlineCalendar, AiOutlineDelete } from \"react-icons/ai\";\r\nimport { AiOutlineEdit } from \"react-icons/ai\";\r\nimport { TaskListByStatus } from \"../../APIRequest/APIRequest\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { DeleteToDO } from \"../../helper/DeleteAlert\";\r\nimport { UpdateToDO } from \"../../helper/UpdateAlert\";\r\nconst Canceled = () => {\r\n  useEffect(() => {\r\n    TaskListByStatus(\"Canceled\");\r\n  }, []);\r\n\r\n  const CanceledList = useSelector((state) => state.task.Canceled);\r\n\r\n  const DeleteItem = (id) => {\r\n    DeleteToDO(id).then((result) => {\r\n      if (result === true) {\r\n        TaskListByStatus(\"Canceled\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const StatusChangeItem = (id, status) => {\r\n    UpdateToDO(id, status).then((result) => {\r\n      if (result === true) {\r\n        TaskListByStatus(\"Canceled\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Container fluid={true} className=\"content-body\">\r\n        <div className=\"row p-0 m-0\">\r\n          <div className=\"col-12 col-md-6 col-lg-8 px-3\">\r\n            <h5>Task Canceled</h5>\r\n          </div>\r\n          <div className=\"col-12 float-end col-md-6 col-lg-4 px-2\">\r\n            <div className=\"row\">\r\n              <div className=\"col-8\">\r\n                <input className=\"form-control w-100\" />\r\n              </div>\r\n              <div className=\"col-4\">\r\n                <button className=\"btn btn-primary w-100\">Search</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row p-0 m-0\">\r\n          {CanceledList.map((item, i) => (\r\n            <div\r\n              key={i.toString()}\r\n              className=\"col-12 col-lg-4 col-sm-6 col-md-4  p-2\"\r\n            >\r\n              <div className=\"card h-100\">\r\n                <div className=\"card-body\">\r\n                  <h6 className=\"animated fadeInUp\">{item.title}</h6>\r\n                  <p className=\"animated fadeInUp\">{item.description}</p>\r\n                  <p className=\"m-0 animated fadeInUp p-0\">\r\n                    <AiOutlineCalendar /> {item.createdDate}\r\n                    <a\r\n                      onClick={StatusChangeItem.bind(\r\n                        this,\r\n                        item._id,\r\n                        item.status\r\n                      )}\r\n                      className=\"icon-nav text-primary mx-1\"\r\n                    >\r\n                      <AiOutlineEdit />\r\n                    </a>\r\n                    <a\r\n                      onClick={DeleteItem.bind(this, item._id)}\r\n                      className=\"icon-nav text-danger mx-1\"\r\n                    >\r\n                      <AiOutlineDelete />\r\n                    </a>\r\n                    <a className=\"badge float-end bg-danger\">{item.status}</a>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Container>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Canceled;\r\n","import Swal from \"sweetalert2\";\r\nimport {DeleteRequest} from \"../APIRequest/APIRequest\";\r\n\r\nexport function DeleteToDO(id){\r\n    return  Swal.fire({\r\n        title: 'Are you sure?',\r\n        text: \"You won't be able to revert this!\",\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          return  DeleteRequest(id).then((deleteResult)=>{\r\n                return deleteResult\r\n            })\r\n        }\r\n    })\r\n\r\n}","import Swal from \"sweetalert2\";\r\nimport {UpdateStatusRequest} from \"../APIRequest/APIRequest\";\r\n\r\nexport function UpdateToDO(id,status){\r\n    return Swal.fire({\r\n        title: 'Change Status',\r\n        input: 'select',\r\n        inputOptions: {New: 'New', Completed: 'Completed', Progress: 'Progress', Canceled: 'Canceled'},\r\n        inputValue:status,\r\n    }).then((result)=>{\r\n        return UpdateStatusRequest(id, result.value).then((res)=>{\r\n            return res;\r\n        })\r\n    })\r\n}"],"names":["useEffect","TaskListByStatus","CanceledList","useSelector","state","task","Canceled","DeleteItem","id","DeleteToDO","then","result","StatusChangeItem","status","UpdateToDO","Fragment","fluid","className","map","item","i","title","description","createdDate","onClick","bind","_id","toString","Swal","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","DeleteRequest","deleteResult","input","inputOptions","New","Completed","Progress","inputValue","UpdateStatusRequest","value","res"],"sourceRoot":""}