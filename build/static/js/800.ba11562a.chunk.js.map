{"version":3,"file":"static/js/800.ba11562a.chunk.js","mappings":"uSAIMA,EAAmBC,EAAAA,YAAiB,WAMvCC,GAAQ,IALTC,EAAQ,EAARA,SACAC,EAAS,EAATA,UAAS,IAETC,GAAIC,OAAS,IAAG,QAAK,EAClBC,GAAK,YAEFC,GAAoBC,EAAAA,EAAAA,IAAmBN,EAAU,OACjDO,GAAcC,EAAAA,EAAAA,MACdC,GAAgBC,EAAAA,EAAAA,MAChBC,EAAa,GAAH,OAAMN,EAAiB,SACjCO,EAAU,GAehB,OAdAL,EAAYM,SAAQ,SAAAC,GAClB,IAEIC,EAFEC,EAAYZ,EAAMU,UACjBV,EAAMU,GAITC,EAFa,MAAbC,GAA0C,kBAAdA,EAG1BA,EADFD,KAGKC,EAET,IAAMC,EAAQH,IAAaL,EAAgB,IAAH,OAAOK,GAAa,GAChD,MAARC,GAAcH,EAAQM,KAAK,GAAD,OAAIP,GAAU,OAAGM,EAAK,YAAIF,GAC1D,KACoBI,EAAAA,EAAAA,KAAKhB,GAAW,gBAClCJ,IAAKA,GACFK,GAAK,IACRH,UAAWmB,IAAAA,WAAW,EAAD,CAACnB,EAAWI,GAAiB,OAAKO,MAE3D,IACAf,EAAIwB,YAAc,MAClB,Q,8BCsBA,EAtDe,WACb,IAAIC,EACFC,GAAiBC,EAAAA,EAAAA,UACfC,GAAWC,EAAAA,EAAAA,MAkBf,OACE,SAACC,EAAA,EAAS,CAACC,OAAO,EAAM3B,UAAU,eAAc,UAC9C,SAAC,EAAG,CAACA,UAAU,gCAA+B,UAC5C,gBAAKA,UAAU,2CAA0C,UACvD,gBAAKA,UAAU,OAAM,UACnB,iBAAKA,UAAU,YAAW,WACxB,wBAAI,gBACJ,mBACA,kBACEF,IAAK,SAAC8B,GAAK,OAAMP,EAAWO,CAAK,EACjCC,YAAY,YACZ7B,UAAU,iCACV8B,KAAK,UAEP,mBACA,qBACEhC,IAAK,SAAC8B,GAAK,OAAMN,EAAiBM,CAAK,EACvCG,KAAM,EACNF,YAAY,mBACZ7B,UAAU,iCACV8B,KAAK,UAEP,mBACA,mBAAQE,QAvCF,WAChB,IAAIC,EAAQZ,EAASa,MACjBC,EAAcb,EAAeY,OAC7BE,EAAAA,EAAAA,IAAQH,IACVI,EAAAA,EAAAA,IAAW,mBACFD,EAAAA,EAAAA,IAAQD,IACjBE,EAAAA,EAAAA,IAAW,yBAEXC,EAAAA,EAAAA,IAAeL,EAAOE,GAAaI,MAAK,SAACC,IAC3B,IAARA,GACFhB,EAAS,OAEb,GAEJ,EAyBwCxB,UAAU,4BAA2B,SAAC,qBAShF,C","sources":["../node_modules/react-bootstrap/esm/Row.js","components/Create/Create.jsx"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import React, { useRef } from \"react\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\nimport { ErrorToast, IsEmpty } from \"../../helper/FormHelper\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { NewTaskRequest } from \"../../APIRequest/APIRequest\";\r\nconst Create = () => {\r\n  let titleRef,\r\n    descriptionRef = useRef();\r\n  let navigate = useNavigate();\r\n\r\n  const CreateNew = () => {\r\n    let title = titleRef.value;\r\n    let description = descriptionRef.value;\r\n    if (IsEmpty(title)) {\r\n      ErrorToast(\"Title Required\");\r\n    } else if (IsEmpty(description)) {\r\n      ErrorToast(\"Description Required\");\r\n    } else {\r\n      NewTaskRequest(title, description).then((res) => {\r\n        if (res === true) {\r\n          navigate(\"/All\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container fluid={true} className=\"content-body\">\r\n      <Row className=\"d-flex justify-content-center\">\r\n        <div className=\"col-12 col-lg-8  col-sm-12 col-md-8  p-2\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4>Create New</h4>\r\n              <br />\r\n              <input\r\n                ref={(input) => (titleRef = input)}\r\n                placeholder=\"Task Name\"\r\n                className=\"form-control animated fadeInUp\"\r\n                type=\"text\"\r\n              />\r\n              <br />\r\n              <textarea\r\n                ref={(input) => (descriptionRef = input)}\r\n                rows={5}\r\n                placeholder=\"Task Description\"\r\n                className=\"form-control animated fadeInUp\"\r\n                type=\"text\"\r\n              />\r\n              <br />\r\n              <button onClick={CreateNew} className=\"btn float-end btn-primary\">\r\n                Create\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default Create;\r\n"],"names":["Row","React","ref","bsPrefix","className","as","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","_jsx","classNames","displayName","titleRef","descriptionRef","useRef","navigate","useNavigate","Container","fluid","input","placeholder","type","rows","onClick","title","value","description","IsEmpty","ErrorToast","NewTaskRequest","then","res"],"sourceRoot":""}